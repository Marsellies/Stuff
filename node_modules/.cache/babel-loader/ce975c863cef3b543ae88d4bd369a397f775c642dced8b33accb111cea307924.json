{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../../utils/constants';\nexport const createUser = createAsyncThunk('users/createUser', async (payload, thunkAPI) => {\n  try {\n    const res = await axios.post(`${BASE_URL}/users`, payload);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst initialState = {\n  currentUser: {},\n  cart: [],\n  isLoading: false,\n  formType: 'signup',\n  showForm: false\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    addItemToCart: (state, {\n      payload\n    }) => {\n      let newCart = [...state.cart];\n      const found = state.cart.find(({\n        id\n      }) => id === payload.id);\n      if (found) {\n        newCart = newCart.map(item => {\n          return item.id === payload.id ? {\n            ...item,\n            quantity: payload.quantity || item.quantity + 1\n          } : item;\n        });\n      } else newCart.push({\n        ...payload,\n        quantity: 1\n      });\n      state.cart = newCart;\n    }\n  },\n  extraReducers: builder => {\n    // builder.addCase(getCategories.pending, (state) => {\n    //   state.isLoading = true;\n    // });\n    builder.addCase(createUser.fulfilled, (state, {\n      payload\n    }) => {\n      state.currentUser = payload;\n    });\n    // builder.addCase(getCategories.rejected, (state) => {\n    //   state.isLoading = false;\n    // });\n  }\n});\n\nexport default userSlice.reducer;\nexport const {\n  addItemToCart\n} = userSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","BASE_URL","createUser","payload","thunkAPI","res","post","data","error","console","log","rejectWithValue","initialState","currentUser","cart","isLoading","formType","showForm","userSlice","name","reducers","addItemToCart","state","newCart","found","find","id","map","item","quantity","push","extraReducers","builder","addCase","fulfilled","reducer","actions"],"sources":["C:/Users/Alexander/Desktop/Projects/store/src/store/user/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../utils/constants';\r\n\r\nexport const createUser = createAsyncThunk(\r\n  'users/createUser',\r\n  async (payload, thunkAPI) => {\r\n    try {\r\n      const res = await axios.post(`${BASE_URL}/users`, payload);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  cart: [],\r\n  isLoading: false,\r\n  formType: 'signup',\r\n  showForm: false,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    addItemToCart: (state, { payload }) => {\r\n      let newCart = [...state.cart];\r\n      const found = state.cart.find(({ id }) => id === payload.id);\r\n      if (found) {\r\n        newCart = newCart.map((item) => {\r\n          return item.id === payload.id\r\n            ? { ...item, quantity: payload.quantity || item.quantity + 1 }\r\n            : item;\r\n        });\r\n      } else newCart.push({ ...payload, quantity: 1 });\r\n      state.cart = newCart;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // builder.addCase(getCategories.pending, (state) => {\r\n    //   state.isLoading = true;\r\n    // });\r\n    builder.addCase(createUser.fulfilled, (state, { payload }) => {\r\n      state.currentUser = payload;\r\n    });\r\n    // builder.addCase(getCategories.rejected, (state) => {\r\n    //   state.isLoading = false;\r\n    // });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const { addItemToCart } = userSlice.actions;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,uBAAuB;AAEhD,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACxC,kBAAkB,EAClB,OAAOK,OAAO,EAAEC,QAAQ,KAAK;EAC3B,IAAI;IACF,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,GAAEL,QAAS,QAAO,EAAEE,OAAO,CAAC;IAC1D,OAAOE,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAOJ,QAAQ,CAACO,eAAe,CAACH,KAAK,CAAC;EACxC;AACF,CACF,CAAC;AAED,MAAMI,YAAY,GAAG;EACnBC,WAAW,EAAE,CAAC,CAAC;EACfC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,QAAQ;EAClBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC5BoB,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAE;MAAEnB;IAAQ,CAAC,KAAK;MACrC,IAAIoB,OAAO,GAAG,CAAC,GAAGD,KAAK,CAACR,IAAI,CAAC;MAC7B,MAAMU,KAAK,GAAGF,KAAK,CAACR,IAAI,CAACW,IAAI,CAAC,CAAC;QAAEC;MAAG,CAAC,KAAKA,EAAE,KAAKvB,OAAO,CAACuB,EAAE,CAAC;MAC5D,IAAIF,KAAK,EAAE;QACTD,OAAO,GAAGA,OAAO,CAACI,GAAG,CAAEC,IAAI,IAAK;UAC9B,OAAOA,IAAI,CAACF,EAAE,KAAKvB,OAAO,CAACuB,EAAE,GACzB;YAAE,GAAGE,IAAI;YAAEC,QAAQ,EAAE1B,OAAO,CAAC0B,QAAQ,IAAID,IAAI,CAACC,QAAQ,GAAG;UAAE,CAAC,GAC5DD,IAAI;QACV,CAAC,CAAC;MACJ,CAAC,MAAML,OAAO,CAACO,IAAI,CAAC;QAAE,GAAG3B,OAAO;QAAE0B,QAAQ,EAAE;MAAE,CAAC,CAAC;MAChDP,KAAK,CAACR,IAAI,GAAGS,OAAO;IACtB;EACF,CAAC;EACDQ,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACA;IACA;IACAA,OAAO,CAACC,OAAO,CAAC/B,UAAU,CAACgC,SAAS,EAAE,CAACZ,KAAK,EAAE;MAAEnB;IAAQ,CAAC,KAAK;MAC5DmB,KAAK,CAACT,WAAW,GAAGV,OAAO;IAC7B,CAAC,CAAC;IACF;IACA;IACA;EACF;AACF,CAAC,CAAC;;AAEF,eAAee,SAAS,CAACiB,OAAO;AAEhC,OAAO,MAAM;EAAEd;AAAc,CAAC,GAAGH,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}