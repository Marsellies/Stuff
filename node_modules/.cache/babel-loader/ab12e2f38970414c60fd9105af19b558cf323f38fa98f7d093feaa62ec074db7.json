{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../../utils/constants';\n\n// export const getCategories = createAsyncThunk(\n//   'categories/gatCategories',\n//   async (_, thunkAPI) => {\n//     try {\n//       const res = await axios(`${BASE_URL}/categories`);\n//       return res.data;\n//     } catch (error) {\n//       console.log(error);\n//       return thunkAPI.rejectWithValue(error);\n//     }\n//   }\n// );\n\nconst initialState = {\n  currentUser: [],\n  cart: [],\n  isLoading: false\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    addItemToCart: (state, {\n      payload\n    }) => {\n      let newCart = [...state.cart];\n      const found = state.cart.find(({\n        id\n      }) => id === payload.id);\n      if (found) {\n        newCart = newCart.map(item => {\n          return item.id === payload.id ? {\n            ...item,\n            quantity: payload.quantity || item.quantity + 1\n          } : item;\n        });\n      } else newCart.push({\n        ...payload,\n        quantity: 1\n      });\n      state.cart = newCart;\n    }\n  },\n  extraReducers: builder => {\n    // builder.addCase(getCategories.pending, (state) => {\n    //   state.isLoading = true;\n    // });\n    // builder.addCase(getCategories.fulfilled, (state, { payload }) => {\n    //   state.list = payload;\n    //   state.isLoading = false;\n    // });\n    // builder.addCase(getCategories.rejected, (state) => {\n    //   state.isLoading = false;\n    // });\n  }\n});\nexport default userSlice.reducer;\nexport const {\n  addItemToCart\n} = userSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","BASE_URL","initialState","currentUser","cart","isLoading","userSlice","name","reducers","addItemToCart","state","payload","newCart","found","find","id","map","item","quantity","push","extraReducers","builder","reducer","actions"],"sources":["C:/Users/Alexander/Desktop/Projects/store/src/store/user/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../utils/constants';\r\n\r\n// export const getCategories = createAsyncThunk(\r\n//   'categories/gatCategories',\r\n//   async (_, thunkAPI) => {\r\n//     try {\r\n//       const res = await axios(`${BASE_URL}/categories`);\r\n//       return res.data;\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       return thunkAPI.rejectWithValue(error);\r\n//     }\r\n//   }\r\n// );\r\n\r\nconst initialState = {\r\n  currentUser: [],\r\n  cart: [],\r\n  isLoading: false,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    addItemToCart: (state, { payload }) => {\r\n      let newCart = [...state.cart];\r\n      const found = state.cart.find(({ id }) => id === payload.id);\r\n      if (found) {\r\n        newCart = newCart.map((item) => {\r\n          return item.id === payload.id\r\n            ? { ...item, quantity: payload.quantity || item.quantity + 1 }\r\n            : item;\r\n        });\r\n      } else newCart.push({ ...payload, quantity: 1 });\r\n      state.cart = newCart;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // builder.addCase(getCategories.pending, (state) => {\r\n    //   state.isLoading = true;\r\n    // });\r\n    // builder.addCase(getCategories.fulfilled, (state, { payload }) => {\r\n    //   state.list = payload;\r\n    //   state.isLoading = false;\r\n    // });\r\n    // builder.addCase(getCategories.rejected, (state) => {\r\n    //   state.isLoading = false;\r\n    // });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const { addItemToCart } = userSlice.actions;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,uBAAuB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACrC,IAAIC,OAAO,GAAG,CAAC,GAAGF,KAAK,CAACN,IAAI,CAAC;MAC7B,MAAMS,KAAK,GAAGH,KAAK,CAACN,IAAI,CAACU,IAAI,CAAC,CAAC;QAAEC;MAAG,CAAC,KAAKA,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAC5D,IAAIF,KAAK,EAAE;QACTD,OAAO,GAAGA,OAAO,CAACI,GAAG,CAAEC,IAAI,IAAK;UAC9B,OAAOA,IAAI,CAACF,EAAE,KAAKJ,OAAO,CAACI,EAAE,GACzB;YAAE,GAAGE,IAAI;YAAEC,QAAQ,EAAEP,OAAO,CAACO,QAAQ,IAAID,IAAI,CAACC,QAAQ,GAAG;UAAE,CAAC,GAC5DD,IAAI;QACV,CAAC,CAAC;MACJ,CAAC,MAAML,OAAO,CAACO,IAAI,CAAC;QAAE,GAAGR,OAAO;QAAEO,QAAQ,EAAE;MAAE,CAAC,CAAC;MAChDR,KAAK,CAACN,IAAI,GAAGQ,OAAO;IACtB;EACF,CAAC;EACDQ,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEJ,CAAC,CAAC;AAEF,eAAef,SAAS,CAACgB,OAAO;AAEhC,OAAO,MAAM;EAAEb;AAAc,CAAC,GAAGH,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}